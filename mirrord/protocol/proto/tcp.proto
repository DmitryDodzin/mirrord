syntax = "proto3";

package protocol.tcp;

import "error.proto";
import "std_types.proto";

message NewTcpConnection {
	uint64 connection_id = 1;
	std_types.IpAddr remote_address = 2;
	int32 destination_port = 3;
	int32 source_port = 4;
	std_types.IpAddr local_address = 5;
}

message TcpData {
	uint64 connection_id = 1;
	bytes bytes = 2;
}

message TcpClose {
	uint64 connection_id = 1;
}

message SubscribeResult {
	oneof result {
		int32 ok = 1;
		error.ResponseError err = 2;
	}
}

message Header {
	string name = 1;
	string value = 2;
}

message InternalHttpResponse {
	int32 status = 1;
	string version = 2;
	repeated Header headers = 3;
	bytes body = 4;
}

message HttpRequest {
	uint64 connection_id = 1;
	int32 request_id = 2;
	int32 port = 3;
	InternalHttpResponse internal_response = 4;
}

message LayerTcp {
	oneof layerTcpType {
		int32 port_subscribe = 1;
		uint64 connection_unsubscribe = 2;
		int32 port_unsubscribe = 3;
	}
}

message DaemonTcp {
	oneof daemonTcpType {
		NewTcpConnection new_tcp_connection = 1;
		TcpData tcp_data = 2;
		TcpClose tcp_close = 3;
		SubscribeResult subscribe_result = 4;
		HttpRequest http_request = 5;
	}
}
